#!/bin/bash

# Demo Generator Production Deployment Script
# Usage: ./scripts/deploy.sh

set -e

echo "üöÄ Starting Demo Generator deployment..."

# Check if we're in the right directory
if [ ! -f "package.json" ]; then
    echo "‚ùå Error: Please run from demo-generator root directory"
    exit 1
fi

# Create logs directory
echo "üìÅ Creating logs directory..."
mkdir -p logs

# Install dependencies
echo "üì¶ Installing dependencies..."
npm ci --production

# Build TypeScript
echo "üî® Building TypeScript..."
npm run build

# Check if .env file exists
if [ ! -f ".env" ]; then
    echo "‚ö†Ô∏è Warning: .env file not found. Copying from example..."
    cp .env.example .env
    echo "‚úèÔ∏è Please edit .env with your API keys before starting"
fi

# Install PM2 if not present
if ! command -v pm2 &> /dev/null; then
    echo "üì¶ Installing PM2..."
    npm install -g pm2
fi

# Stop existing process if running
echo "‚èπÔ∏è Stopping existing processes..."
pm2 stop demo-generator || echo "No existing process found"
pm2 delete demo-generator || echo "No process to delete"

# Start with PM2
echo "üöÄ Starting with PM2..."
pm2 start ecosystem.config.js --env production

# Save PM2 configuration
echo "üíæ Saving PM2 configuration..."
pm2 save

# Setup PM2 startup script (Linux/Mac only)
if [[ "$OSTYPE" == "linux-gnu"* ]] || [[ "$OSTYPE" == "darwin"* ]]; then
    echo "üîß Setting up PM2 startup script..."
    pm2 startup || echo "PM2 startup setup failed - please run manually"
fi

# Show status
echo "üìä Process status:"
pm2 status

# Show logs command
echo "üìù To view logs: pm2 logs demo-generator"
echo "üè• Health check: curl http://localhost:3000/health"
echo "‚úÖ Deployment complete!"

# Test health check
sleep 3
echo "üß™ Testing health check..."
if curl -f http://localhost:3000/health > /dev/null 2>&1; then
    echo "‚úÖ Health check passed!"
else
    echo "‚ö†Ô∏è Health check failed - check logs with: pm2 logs demo-generator"
fi
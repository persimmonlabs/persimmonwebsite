{
  "name": "Client Onboarding - Simple",
  "nodes": [
    {
      "parameters": {
        "authentication": "oAuth2",
        "select": "channel",
        "channelId": {
          "value": "ONBOARDING_EMAIL_CHANNEL_ID",
          "mode": "string"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.gmailTrigger",
      "typeVersion": 1,
      "position": [240, 300],
      "id": "new-client-email",
      "name": "New Client Email",
      "credentials": {
        "gmailOAuth2": {
          "id": "GMAIL_CRED_ID",
          "name": "Gmail"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Extract client info from email\nconst emailSubject = $json.subject || '';\nconst emailBody = $json.bodyText || $json.snippet || '';\nconst fromEmail = $json.from || '';\n\n// Parse client information (adjust parsing based on your email format)\nconst clientInfo = {\n  email: fromEmail.match(/<(.+)>/)?.[1] || fromEmail,\n  name: fromEmail.split('<')[0].trim() || 'Unknown',\n  sport: 'tennis', // Default for now\n  teamName: 'Team', // Will be updated manually\n  contactMethod: 'email',\n  onboardingDate: new Date().toISOString(),\n  status: 'new',\n  clientId: `client_${Date.now()}`,\n  originalEmail: {\n    subject: emailSubject,\n    body: emailBody,\n    messageId: $json.id\n  }\n};\n\n// Extract any mentioned social media handles or team names from email\nconst instagramMatch = emailBody.match(/@([a-zA-Z0-9._]+)/g);\nconst teamNameMatch = emailBody.match(/(team|club|academy)\\s+([a-zA-Z\\s]+)/i);\n\nif (instagramMatch) {\n  clientInfo.socialHandles = {\n    instagram: instagramMatch[0]\n  };\n}\n\nif (teamNameMatch) {\n  clientInfo.teamName = teamNameMatch[2].trim();\n}\n\nreturn [{ json: clientInfo }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [460, 300],
      "id": "parse-client-info",
      "name": "Parse Client Info"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "value": "CLIENTS_MASTER_SHEET_ID",
          "mode": "string"
        },
        "sheetName": {
          "value": "Clients",
          "mode": "string"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "client_id": "={{ $json.clientId }}",
            "name": "={{ $json.name }}",
            "email": "={{ $json.email }}",
            "team_name": "={{ $json.teamName }}",
            "sport": "={{ $json.sport }}",
            "status": "={{ $json.status }}",
            "onboarding_date": "={{ $json.onboardingDate }}",
            "contact_method": "{{ $json.contactMethod }}",
            "social_handles": "={{ JSON.stringify($json.socialHandles || {}) }}",
            "original_inquiry": "={{ $json.originalEmail.subject + ' | ' + $json.originalEmail.body.substring(0, 200) + '...' }}"
          }
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.2,
      "position": [680, 300],
      "id": "add-to-client-list",
      "name": "Add to Client List",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "GOOGLE_SHEETS_CRED_ID",
          "name": "Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "to": "={{ $json.email }}",
        "subject": "Welcome to Persimmon Labs - Let's Get Your Team Automated! 🎾",
        "emailType": "html",
        "message": "<!DOCTYPE html>\n<html>\n<head>\n    <style>\n        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }\n        .header { background: #f8f9fa; padding: 20px; text-align: center; }\n        .content { padding: 20px; }\n        .step { background: #f1f3f4; padding: 15px; margin: 10px 0; border-left: 4px solid #4285f4; }\n        .cta { background: #4285f4; color: white; padding: 15px 25px; text-decoration: none; border-radius: 5px; display: inline-block; margin: 20px 0; }\n    </style>\n</head>\n<body>\n    <div class=\"header\">\n        <h1>Welcome to Persimmon Labs!</h1>\n        <p>Social Media Automation for {{ $json.teamName }}</p>\n    </div>\n    \n    <div class=\"content\">\n        <p>Hi {{ $json.name }},</p>\n        \n        <p>Thanks for your interest in automating {{ $json.teamName }}'s social media! We're excited to help you save hours each week while keeping your fans engaged.</p>\n        \n        <h2>Next Steps (Takes 15 minutes total):</h2>\n        \n        <div class=\"step\">\n            <h3>1. Quick Call (10 minutes)</h3>\n            <p>Let's discuss your current social media process and goals.</p>\n            <a href=\"https://calendly.com/persimmonlabs/onboarding\" class=\"cta\">Schedule Call</a>\n        </div>\n        \n        <div class=\"step\">\n            <h3>2. Share Your Schedule (2 minutes)</h3>\n            <p>Send us your match/practice schedule - we'll create a Google Sheet template if needed.</p>\n        </div>\n        \n        <div class=\"step\">\n            <h3>3. Connect Your Accounts (3 minutes)</h3>\n            <p>We'll walk you through connecting Instagram, Twitter, and Facebook safely.</p>\n        </div>\n        \n        <h2>What Happens Next:</h2>\n        <ul>\n            <li>✅ We set up your automation workflows</li>\n            <li>✅ Test posts with your approval</li>\n            <li>✅ Go live with automated content</li>\n            <li>✅ You save 5+ hours per week</li>\n        </ul>\n        \n        <p>Questions? Just reply to this email or text us at +1 (XXX) XXX-XXXX.</p>\n        \n        <p>Looking forward to working together!</p>\n        \n        <p>Best,<br>\nThe Persimmon Labs Team</p>\n    </div>\n</body>\n</html>",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 1,
      "position": [900, 300],
      "id": "send-welcome-email",
      "name": "Send Welcome Email",
      "credentials": {
        "gmailOAuth2": {
          "id": "GMAIL_CRED_ID",
          "name": "Gmail"
        }
      }
    },
    {
      "parameters": {
        "chatId": "ADMIN_TELEGRAM_CHAT_ID",
        "text": "🎉 NEW CLIENT INQUIRY!\n\n👤 Name: {{ $json.name }}\n📧 Email: {{ $json.email }}\n🏆 Team: {{ $json.teamName }}\n🎾 Sport: {{ $json.sport }}\n📅 Date: {{ new Date($json.onboardingDate).toLocaleDateString() }}\n\n📝 Original Message:\n{{ $json.originalEmail.subject }}\n\n{{ $json.originalEmail.body.substring(0, 300) }}{{ $json.originalEmail.body.length > 300 ? '...' : '' }}\n\n✅ Welcome email sent automatically\n📊 Added to client tracking sheet\n\nNext: Schedule onboarding call!",
        "additionalFields": {
          "parse_mode": "Markdown"
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [1120, 300],
      "id": "notify-team",
      "name": "Notify Team",
      "credentials": {
        "telegramApi": {
          "id": "TELEGRAM_CRED_ID",
          "name": "Telegram Bot"
        }
      }
    },
    {
      "parameters": {
        "options": {
          "delayTime": 86400
        }
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [900, 500],
      "id": "wait-24-hours",
      "name": "Wait 24 Hours"
    },
    {
      "parameters": {
        "operation": "read",
        "documentId": {
          "value": "CLIENTS_MASTER_SHEET_ID",
          "mode": "string"
        },
        "sheetName": {
          "value": "Clients",
          "mode": "string"
        },
        "filters": {
          "conditions": [
            {
              "column": "client_id",
              "condition": "equal",
              "value": "={{ $json.clientId }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.2,
      "position": [1120, 500],
      "id": "check-client-status",
      "name": "Check Client Status",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "GOOGLE_SHEETS_CRED_ID",
          "name": "Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "conditions": [
                  {
                    "leftValue": "={{ $json.status }}",
                    "rightValue": "new",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [1340, 500],
      "id": "check-if-still-new",
      "name": "Check if Still New"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "to": "={{ $json.email }}",
        "subject": "Quick question about {{ $json.teamName }}'s social media automation",
        "emailType": "html",
        "message": "<!DOCTYPE html>\n<html>\n<body style=\"font-family: Arial, sans-serif; line-height: 1.6; color: #333;\">\n    <div style=\"padding: 20px;\">\n        <p>Hi {{ $json.name }},</p>\n        \n        <p>I wanted to follow up on our social media automation for {{ $json.teamName }}.</p>\n        \n        <p>I know coaches are incredibly busy, so I kept this simple:</p>\n        \n        <div style=\"background: #f8f9fa; padding: 15px; margin: 15px 0; border-left: 4px solid #4285f4;\">\n            <p><strong>Still interested? Just reply \"YES\"</strong></p>\n            <p>Not the right time? No problem - just let me know.</p>\n        </div>\n        \n        <p>The setup literally takes 15 minutes and saves you 5+ hours per week on social media.</p>\n        \n        <p>Here's what {{ $json.teamName }} would get:</p>\n        <ul>\n            <li>✅ Automatic match day posts</li>\n            <li>✅ Score updates and highlights</li>\n            <li>✅ Practice motivation posts</li>\n            <li>✅ You approve everything via text message</li>\n        </ul>\n        \n        <p>Questions? Just reply or call/text (XXX) XXX-XXXX.</p>\n        \n        <p>Thanks!</p>\n        \n        <p>The Persimmon Labs Team</p>\n    </div>\n</body>\n</html>",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 1,
      "position": [1560, 500],
      "id": "send-followup-email",
      "name": "Send Follow-up Email",
      "credentials": {
        "gmailOAuth2": {
          "id": "GMAIL_CRED_ID",
          "name": "Gmail"
        }
      }
    },
    {
      "parameters": {
        "content": "CLIENT ONBOARDING AUTOMATION:\n\nTriggers on new email to onboarding address\n\nFLOW:\n1. Parse client info from inquiry email\n2. Add to master client tracking sheet\n3. Send professional welcome email\n4. Notify team via Telegram\n5. Wait 24 hours\n6. Check if client responded\n7. Send follow-up if still \"new\" status\n\nSETUP:\n1. Create dedicated email: onboarding@persimmonlabs.com\n2. Set up Gmail trigger for that email\n3. Create CLIENTS_MASTER_SHEET_ID\n4. Add Calendly scheduling link\n5. Update contact phone number\n\nCLIENT STATUSES:\n- new: Just inquired\n- contacted: Had call/meeting\n- setup: Workflows configured\n- active: Live automation\n- paused: Temporarily stopped\n- cancelled: No longer client\n\nThis automates the first touchpoint and follow-up, ensuring no leads fall through cracks.",
        "height": 400,
        "width": 400
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [240, 700],
      "id": "onboarding-notes",
      "name": "Onboarding Instructions"
    }
  ],
  "connections": {
    "New Client Email": {
      "main": [
        [
          {
            "node": "Parse Client Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Client Info": {
      "main": [
        [
          {
            "node": "Add to Client List",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add to Client List": {
      "main": [
        [
          {
            "node": "Send Welcome Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Welcome Email": {
      "main": [
        [
          {
            "node": "Notify Team",
            "type": "main",
            "index": 0
          },
          {
            "node": "Wait 24 Hours",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait 24 Hours": {
      "main": [
        [
          {
            "node": "Check Client Status",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Client Status": {
      "main": [
        [
          {
            "node": "Check if Still New",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Still New": {
      "main": [
        [
          {
            "node": "Send Follow-up Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "saveExecutionProgress": true,
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all"
  },
  "meta": {
    "instanceId": "client-onboarding-simple"
  },
  "tags": []
}
{
  "name": "Universal Content Generator - Enhanced SMB",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "cronExpression",
              "expression": "0 8,12,16 * * *"
            }
          ]
        }
      },
      "id": "flexible-schedule-trigger",
      "name": "Flexible Schedule (3x Daily)",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "operation": "read",
        "documentId": {
          "value": "CLIENT_MASTER_SHEET_ID",
          "mode": "string"
        },
        "sheetName": {
          "value": "Content_Calendar",
          "mode": "string"
        },
        "options": {
          "returnAll": true
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.2,
      "position": [460, 300],
      "id": "get-content-calendar",
      "name": "Get Content Calendar",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "GOOGLE_SHEETS_CRED_ID",
          "name": "Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "list",
        "folderId": "CLIENT_GOOGLE_DRIVE_FOLDER_ID",
        "options": {
          "fields": "files(id,name,mimeType,webViewLink,thumbnailLink,createdTime)",
          "orderBy": "createdTime desc"
        }
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [460, 500],
      "id": "check-for-images",
      "name": "Check for Images",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "GOOGLE_DRIVE_CRED_ID",
          "name": "Google Drive"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Universal content decision engine for any SMB type\nconst calendar = $('get-content-calendar').all();\nconst availableImages = $('check-for-images').all();\nconst now = new Date();\nconst todayStr = now.toISOString().split('T')[0];\nconst hour = now.getHours();\nconst dayOfWeek = now.getDay(); // 0=Sunday, 6=Saturday\n\n// Client configuration (loaded from sheet or hardcoded)\nconst clientConfig = {\n  businessType: $json.businessType || 'general', // restaurant, retail, service, professional, fitness, etc.\n  contentTypes: $json.contentTypes?.split(',') || ['promotional', 'educational', 'engagement', 'announcement'],\n  postingSchedule: $json.postingSchedule || 'daily',\n  specialDays: $json.specialDays?.split(',') || [], // Monday=special, Friday=feature, etc.\n  requiresImages: $json.requiresImages !== 'false',\n  tone: $json.tone || 'professional_friendly'\n};\n\nconst postsToCreate = [];\n\n// Check calendar for scheduled content\ncalendar.forEach(item => {\n  const calItem = item.json;\n  if (calItem.date === todayStr && calItem.status !== 'posted') {\n    postsToCreate.push({\n      type: calItem.content_type || 'scheduled',\n      topic: calItem.topic,\n      details: calItem.details,\n      hashtags: calItem.hashtags,\n      imageRequired: calItem.needs_image === 'yes',\n      priority: 'high',\n      source: 'calendar'\n    });\n  }\n});\n\n// Generate content based on business type and time of day\nif (postsToCreate.length === 0) {\n  // Restaurant/Cafe specific\n  if (clientConfig.businessType === 'restaurant' || clientConfig.businessType === 'cafe') {\n    if (hour === 8) {\n      postsToCreate.push({\n        type: 'daily_special',\n        topic: 'breakfast_lunch_special',\n        details: 'morning offerings',\n        imageRequired: true,\n        priority: 'high'\n      });\n    } else if (hour === 12) {\n      postsToCreate.push({\n        type: 'lunch_reminder',\n        topic: 'lunch specials and availability',\n        imageRequired: false,\n        priority: 'medium'\n      });\n    } else if (hour === 16) {\n      postsToCreate.push({\n        type: 'dinner_preview',\n        topic: 'dinner specials or happy hour',\n        imageRequired: true,\n        priority: 'high'\n      });\n    }\n  }\n  \n  // Retail/E-commerce specific\n  else if (clientConfig.businessType === 'retail' || clientConfig.businessType === 'ecommerce') {\n    if (dayOfWeek === 1 && hour === 8) { // Monday morning\n      postsToCreate.push({\n        type: 'weekly_feature',\n        topic: 'featured products for the week',\n        imageRequired: true,\n        priority: 'high'\n      });\n    } else if (dayOfWeek === 5 && hour === 12) { // Friday noon\n      postsToCreate.push({\n        type: 'weekend_sale',\n        topic: 'weekend promotions',\n        imageRequired: true,\n        priority: 'high'\n      });\n    } else if (hour === 16) {\n      postsToCreate.push({\n        type: 'product_highlight',\n        topic: 'product benefits and features',\n        imageRequired: true,\n        priority: 'medium'\n      });\n    }\n  }\n  \n  // Service business specific\n  else if (clientConfig.businessType === 'service') {\n    if (dayOfWeek === 1 && hour === 8) { // Monday\n      postsToCreate.push({\n        type: 'weekly_tip',\n        topic: 'helpful tip for the week',\n        imageRequired: false,\n        priority: 'medium'\n      });\n    } else if (dayOfWeek === 3 && hour === 12) { // Wednesday\n      postsToCreate.push({\n        type: 'testimonial',\n        topic: 'customer success story',\n        imageRequired: false,\n        priority: 'medium'\n      });\n    } else if (dayOfWeek === 5 && hour === 8) { // Friday\n      postsToCreate.push({\n        type: 'weekend_availability',\n        topic: 'weekend service availability',\n        imageRequired: false,\n        priority: 'high'\n      });\n    }\n  }\n  \n  // Professional services specific\n  else if (clientConfig.businessType === 'professional') {\n    if (dayOfWeek === 2 && hour === 8) { // Tuesday\n      postsToCreate.push({\n        type: 'thought_leadership',\n        topic: 'industry insights',\n        imageRequired: false,\n        priority: 'medium'\n      });\n    } else if (dayOfWeek === 4 && hour === 12) { // Thursday\n      postsToCreate.push({\n        type: 'case_study',\n        topic: 'client success or project highlight',\n        imageRequired: false,\n        priority: 'medium'\n      });\n    }\n  }\n  \n  // Fitness/Gym specific\n  else if (clientConfig.businessType === 'fitness' || clientConfig.businessType === 'gym') {\n    if (hour === 8) {\n      postsToCreate.push({\n        type: 'motivation',\n        topic: 'daily motivation',\n        imageRequired: false,\n        priority: 'high'\n      });\n    } else if (hour === 12) {\n      postsToCreate.push({\n        type: 'class_schedule',\n        topic: 'today\\'s classes',\n        imageRequired: false,\n        priority: 'medium'\n      });\n    } else if (hour === 16) {\n      postsToCreate.push({\n        type: 'workout_tip',\n        topic: 'exercise tip or technique',\n        imageRequired: true,\n        priority: 'medium'\n      });\n    }\n  }\n  \n  // Default/General business\n  else {\n    if (hour === 8 || hour === 12 || hour === 16) {\n      const contentRotation = [\n        { type: 'announcement', topic: 'business update' },\n        { type: 'educational', topic: 'helpful information' },\n        { type: 'engagement', topic: 'question or poll' },\n        { type: 'promotional', topic: 'product or service highlight' },\n        { type: 'team_highlight', topic: 'team member spotlight' },\n        { type: 'community', topic: 'local community involvement' }\n      ];\n      \n      // Rotate through content types\n      const contentIndex = Math.floor(now.getTime() / (1000 * 60 * 60 * 24)) % contentRotation.length;\n      postsToCreate.push({\n        ...contentRotation[contentIndex],\n        imageRequired: false,\n        priority: 'medium'\n      });\n    }\n  }\n}\n\n// Match available images if needed\npostsToCreate.forEach(post => {\n  if (post.imageRequired && availableImages.length > 0) {\n    // Find unused image\n    const unusedImage = availableImages.find(img => \n      !img.json.name.includes('_used') && \n      img.json.mimeType.startsWith('image/')\n    );\n    if (unusedImage) {\n      post.imageUrl = unusedImage.json.webViewLink;\n      post.imageThumbnail = unusedImage.json.thumbnailLink;\n      post.imageId = unusedImage.json.id;\n    }\n  }\n});\n\n// Add business context to all posts\npostsToCreate.forEach(post => {\n  post.businessType = clientConfig.businessType;\n  post.tone = clientConfig.tone;\n  post.timestamp = now.toISOString();\n});\n\nreturn postsToCreate.map(post => ({ json: post }));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300],
      "id": "universal-content-decision",
      "name": "Universal Content Decision Engine"
    },
    {
      "parameters": {
        "resource": "chat",
        "model": "gpt-4o-mini",
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "You are an expert social media content creator for {{ $json.businessType }} businesses.\n\nBusiness Context:\n- Type: {{ $json.businessType }}\n- Content Type: {{ $json.type }}\n- Topic: {{ $json.topic }}\n- Details: {{ $json.details }}\n- Tone: {{ $json.tone }}\n- Has Image: {{ $json.imageUrl ? 'Yes' : 'No' }}\n\nContent Guidelines by Business Type:\n\nRESTAURANT/CAFE:\n- Daily specials with prices\n- Emphasize freshness and flavor\n- Create urgency (\"Today only\", \"Limited quantities\")\n- Include ordering info (call, online, walk-in)\n- Mention dietary options if applicable\n\nRETAIL/ECOMMERCE:\n- Product benefits, not just features\n- Include price or \"DM for price\"\n- Create FOMO (\"Only 3 left\", \"Sale ends today\")\n- Clear call-to-action (shop link, store hours)\n- Mention free shipping/returns if applicable\n\nSERVICE BUSINESS:\n- Solve a problem in the post\n- Include testimonial snippets\n- Seasonal relevance (\"Winter prep\", \"Spring cleaning\")\n- Emergency availability if applicable\n- Trust indicators (licensed, insured, years in business)\n\nPROFESSIONAL SERVICES:\n- Share valuable insights\n- Use data/statistics when possible\n- Demonstrate expertise without jargon\n- Include soft CTA (\"Learn more\", \"Let's discuss\")\n- Highlight credentials subtly\n\nFITNESS/GYM:\n- Motivational but realistic\n- Include specific tips or techniques\n- Class times and instructor names\n- Member success stories (with permission)\n- Beginner-friendly language\n\nGENERAL RULES:\n- Keep under 280 characters for multi-platform\n- Use 1-2 relevant emojis\n- Include 3-5 hashtags\n- Local hashtags when applicable (#YourCityEats, #ShopLocal[City])\n- If image provided, reference it (\"Swipe to see\", \"Check out\")\n- Always include business name or handle\n\nGenerate the social media post now. Make it authentic, engaging, and action-oriented."
            },
            {
              "role": "user",
              "content": "Create a {{ $json.type }} post about {{ $json.topic }} for our {{ $json.businessType }} business. {{ $json.details ? 'Additional context: ' + $json.details : '' }}"
            }
          ]
        },
        "options": {
          "temperature": 0.8
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.3,
      "position": [900, 300],
      "id": "generate-smb-content",
      "name": "Generate SMB Content",
      "credentials": {
        "openAiApi": {
          "id": "OPENAI_CRED_ID",
          "name": "OpenAI"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "value": "CLIENT_CONTENT_SHEET_ID",
          "mode": "string"
        },
        "sheetName": {
          "value": "Generated_Content",
          "mode": "string"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "timestamp": "={{ $json.timestamp }}",
            "business_type": "={{ $json.businessType }}",
            "post_type": "={{ $json.type }}",
            "topic": "={{ $json.topic }}",
            "content": "={{ $json.choices[0].message.content }}",
            "image_url": "={{ $json.imageUrl || '' }}",
            "image_id": "={{ $json.imageId || '' }}",
            "status": "pending_approval",
            "platforms": "instagram,facebook,twitter",
            "scheduled_time": "={{ new Date().toISOString() }}",
            "priority": "={{ $json.priority }}",
            "source": "={{ $json.source || 'automated' }}"
          }
        }
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.2,
      "position": [1120, 300],
      "id": "save-generated-content",
      "name": "Save Generated Content",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "GOOGLE_SHEETS_CRED_ID",
          "name": "Google Sheets"
        }
      }
    },
    {
      "parameters": {
        "chatId": "CLIENT_TELEGRAM_CHAT_ID",
        "text": "🔔 New {{ $json.businessType }} post ready!\n\n📝 Type: {{ $json.type }}\n🎯 Topic: {{ $json.topic }}\n{{ $json.imageUrl ? '🖼️ Image: Attached from Drive\\n' : '' }}\n⏰ Priority: {{ $json.priority }}\n\n<b>Content:</b>\n{{ $json.choices[0].message.content }}\n\n<b>Reply with:</b>\n✅ to approve and post\n❌ to skip this one\n✏️ Edit: [your changes] to modify",
        "additionalFields": {
          "parse_mode": "HTML",
          "reply_markup": {
            "inline_keyboard": [
              [
                { "text": "✅ Approve", "callback_data": "approve_{{ $json.timestamp }}" },
                { "text": "❌ Skip", "callback_data": "skip_{{ $json.timestamp }}" },
                { "text": "✏️ Edit", "callback_data": "edit_{{ $json.timestamp }}" }
              ]
            ]
          }
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1,
      "position": [1340, 300],
      "id": "send-approval-request",
      "name": "Send Approval Request",
      "credentials": {
        "telegramApi": {
          "id": "TELEGRAM_CRED_ID",
          "name": "Telegram Bot"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "conditions": [
                  {
                    "leftValue": "={{ $json.imageId }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "notEqual"
                    }
                  }
                ]
              }
            }
          ]
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3,
      "position": [1340, 500],
      "id": "check-if-image-used",
      "name": "Check if Image Used"
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "resource": "file",
        "operation": "update",
        "fileId": "={{ $json.imageId }}",
        "name": "={{ $json.imageName }}_used_{{ Date.now() }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [1560, 500],
      "id": "mark-image-used",
      "name": "Mark Image as Used",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "GOOGLE_DRIVE_CRED_ID",
          "name": "Google Drive"
        }
      }
    },
    {
      "parameters": {
        "content": "UNIVERSAL SMB CONTENT GENERATOR\n\nSUPPORTS ALL BUSINESS TYPES:\n✅ Restaurants/Cafes - Daily specials, menu items\n✅ Retail/E-commerce - Products, sales, features\n✅ Service Businesses - Tips, availability, testimonials\n✅ Professional Services - Thought leadership, case studies\n✅ Fitness/Gyms - Motivation, classes, workouts\n✅ General Business - Announcements, team, community\n\nCONTENT SOURCES:\n1. Content Calendar (Google Sheets)\n2. Automated scheduling based on business type\n3. Images from Google Drive folder\n4. Special events and promotions\n\nIMAGE HANDLING:\n• Automatically checks Google Drive folder\n• Matches unused images to content\n• Marks images as used to prevent duplicates\n• Works without images if none available\n\nSCHEDULING:\n• 3x daily: 8am, 12pm, 4pm\n• Business-specific timing\n• Priority system (high/medium/low)\n• Calendar overrides automated content\n\nCONFIGURATION:\nIn CLIENT_MASTER_SHEET_ID, set:\n- business_type: restaurant/retail/service/professional/fitness/general\n- posting_schedule: daily/weekdays/custom\n- tone: professional/casual/friendly/excited\n- requires_images: true/false",
        "height": 400,
        "width": 400
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [240, 700],
      "id": "universal-generator-notes",
      "name": "Universal Generator Instructions"
    }
  ],
  "connections": {
    "Flexible Schedule (3x Daily)": {
      "main": [
        [
          {
            "node": "Get Content Calendar",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check for Images",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Content Calendar": {
      "main": [
        [
          {
            "node": "Universal Content Decision Engine",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for Images": {
      "main": [
        [
          {
            "node": "Universal Content Decision Engine",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Universal Content Decision Engine": {
      "main": [
        [
          {
            "node": "Generate SMB Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate SMB Content": {
      "main": [
        [
          {
            "node": "Save Generated Content",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Save Generated Content": {
      "main": [
        [
          {
            "node": "Send Approval Request",
            "type": "main",
            "index": 0
          },
          {
            "node": "Check if Image Used",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check if Image Used": {
      "main": [
        [
          {
            "node": "Mark Image as Used",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "saveExecutionProgress": true,
    "saveDataErrorExecution": "all",
    "saveDataSuccessExecution": "all"
  },
  "meta": {
    "instanceId": "universal-content-generator-smb"
  },
  "tags": []
}